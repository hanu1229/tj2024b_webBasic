[개발 흐름]
	
	개발자 코드(개발자PC) ----컴파일/빌드----> 웹서버(톰캣) 프로그램 <----HTTP Request---- 클라이언트(사용자/크롬)
													   ----HTTP Response----> 클라이언트(사용자/크롬)

[톰캣 세션]
	- 네트워크 분야에서 상호작용(정보교환)을 하는데 상태의 의미
	- 브라우저 세션/쿠키, 톰캣 세션/쿠키를 지원한다.
	- 정의 : tomcat(톰캣) 서버내 데이터를 저장하고 관리할 수 있게 메모리 제공
		- 과도한 사용은 서버에 부하가 생김
		- 저장소 : DB VS File VS Session VS JVM VS 브라우저
	- 목적 : 상태(데이터)관리, 인증/권한, 효율적인 데이터 관리
	- 주 사용처 ★ 로그인에 주로 사용
		- 로그인 상태유지
		- (비회원제)장바구니 기능
		- 자동로그인, 테마 등등 사용자의 설정값
		- 실시간 처리 등등
		
	- 톰캣내 세션 객체
		- request.getSession() : 현재 톰캣의 세션 객체를 불러온다. 없으면 세션 객체를 생성
			- HttpSession httpSession = req.getSession();
			- 브라우저의 첫 요청이면 세션 객체 생성, 두번째 부터는 기존 세션 객체 불러온다.
			★ 세션은 사용자의 IP와 브러우저의 요청 정보를 이용하여 세션객체를 관리 하므로
			  컴퓨터마다 브라우저마다 서로 다른 메모리공간
				예시 : 내가 크롬에서 네이버에서 로그인을 했다면 엣지에서는 로그인 상태가 아니다.
				예시 : 내가 PC방에서 쇼핑몰의 장바구니를 사용했다면 집 PC에서는 장바구니에 넣었던 것들이 없다.
	
	- 세션 객체 주요 메소드
		- httpSession.getAttributeNames()			: 세션 객체내 모든 속성을 Collections 객체로 반환하는 함수
		- httpSession.getCreationTime()				: 세션 객체가 만들어진 시간, 시 분 초 환산 필요
		- httpSession.getId()						: 세션 객체의 (인스턴스)주소값(식별자)
		- httpSession.getLastAccessedTime() 		: 세션 객체가 마지막으로 사용된 시간, 시 분 초 환산 필요
		- httpSession.isNew()						: 세션 객체가 방금 만들어졌는지 여부를 반환하는 함수, true/false
		- httpSession.invalidate()					: 세션 객체의 모든 속성을 제거
		- httpSession.setMaxIncativeInterval("초")	: 세션 객체의 최대 활성화 유지시간/생명주기
			- 초 단위 : 60초(1분) * 60 --> 60분(1시간)
			- 지정한 유지시간이 지나면 자동으로 세션객체는 초기화된다.
			- 세션의 활성화 상태이므로 세션을 갱신하면 시간은 처음부터 다시 카운트된다.
				- 예시 : 1시간 설정 --> 30분 뒤 요청 --> 1시간 다시 설정(세션 활성화 상태)
				- 예시 : 1시간 설정 --> 1시간 10분 뒤 요청 --> 세션은 없는 상태
	
	- 세션 객체내 속성명과 속성값을 한쌍으로 데이터를 저장( MAP 컬렉션과 유사)
		- httpSession.setAttribute("속성명", 값(자료))	: 세션 객체내 지정한 속성명으로 자료를 저장한다.
			- 무조건 속성 자료의 타입은 Object이다.
				- 이유 : 세션 객체의 모든 타입 자료들을 저장하기 위해 Object로 사용이 되었다.
				- int를 넣었어도 자동으로 Object타입으로 저장된다.
				- 예시
					- session.setAttribute("loginMno", loginMno);
					- loginMno (정수) ----> 세션에 등록되면 loginMno (Object)
		- httpSession.getAttribute("속성명")			: 세션 객체내 지정한 속성명의 값/자료를 반환한다.
			- 무조건 속성의 자료 타입은 Object이므로 자료를 기존 타입으로 타입변환 해야한다.
			- 예시
				- Object object = session.setAttribute("loginMno");
				- int loginMno = (Integer)object;
				* 세션에서 꺼내면 ----> loginMno (Object) ----> (Integer)object;
		- httpSession.removeAttribute("속성명")		: 세션 객체내 지정한 속성명을 제거한다.
		
	※ 세션의 생명주기(태어나고 사라지기까지의 주시)
		- 탄생 : 클라이언트가 서버로부터 첫 요청을 보내올때
		- 주기 : 브라우저 실행 중
		- 죽음 : 서버가 종료될때, 재시작할때, remove를 할 경우
		
		
		
		